# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1 

job_templates:
  docker_sleep_job: &docker_sleep_job
    docker:
      - image: cimg/base:current
    resource_class: small
    steps:
      - checkout
      - run:
          name: "sleep a while"
          command: "sleep 120"

  windows_sleep_job: &windows_sleep_job
    machine:
      image: windows-server-2022-gui:current # Specify a Windows image
    resource_class: 'windows.medium' # Use the 'small' resource class for Windows
    steps:
      - checkout
      - run:
          name: "sleep a while on Windows"
          command: sleep 120

parameters:
    temp:
        type: boolean
        default: true

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  self-host-test:
    machine: true
    resource_class: aws-ec2-runner/micro
    steps:
      - run: 
          name: "Run a 6-hour job with regular output"
          command: |
            echo "Starting 6-hour process..."
            for i in $(seq 1 360); do
              echo "[Minute $i of 360] Process is still running..."
              sleep 120
            done
  sleep:
    # docker:
      # - image: cimg/base:current
    # resource_class: large
    macos:
      xcode: "16.4.0"
    resource_class: macos.m1.medium.gen1
    # Add steps to the job
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "sleep for 1 minute"
          command: "sleep 60"

  sleep_2:
    # docker:
    #   - image: cimg/base:current
    # resource_class: large
    # Add steps to the job
    macos:
      xcode: "16.4.0"
    resource_class: macos.m1.medium.gen1
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "sleep a while for fork repo"
          command: "sleep 31"

  # sleep_3:
  #   docker:
  #     - image: cimg/base:current
  #   resource_class: small 
  #   steps:
  #     - checkout
  #     - run:
  #         name: "sleep a while for fork repo"
  #         command: "sleep 31"

  # Use the template to create jobs sleep_3 through sleep_32
  sleep_3:
    <<: *docker_sleep_job
  sleep_4:
    <<: *docker_sleep_job
  sleep_5:
    <<: *docker_sleep_job
  sleep_6:
    <<: *docker_sleep_job
  sleep_7:
    <<: *docker_sleep_job
  sleep_8:
    <<: *docker_sleep_job
  sleep_9:
    <<: *docker_sleep_job
  sleep_10:
    <<: *docker_sleep_job
  sleep_11:
    <<: *docker_sleep_job
  sleep_12:
    <<: *docker_sleep_job
  sleep_13:
    <<: *docker_sleep_job
  sleep_14:
    <<: *docker_sleep_job
  sleep_15:
    <<: *docker_sleep_job
  sleep_16:
    <<: *docker_sleep_job
  sleep_17:
    <<: *docker_sleep_job
  sleep_18:
    <<: *docker_sleep_job
  sleep_19:
    <<: *windows_sleep_job
  sleep_20:
    <<: *windows_sleep_job
  sleep_21:
    <<: *windows_sleep_job
  sleep_22:
    <<: *windows_sleep_job
  sleep_23:
    <<: *windows_sleep_job
  sleep_24:
    <<: *windows_sleep_job
  sleep_25:
    <<: *windows_sleep_job
  sleep_26:
    <<: *windows_sleep_job
  sleep_27:
    <<: *windows_sleep_job
  sleep_28:
    <<: *windows_sleep_job
  sleep_29:
    <<: *windows_sleep_job
  sleep_30:
    <<: *windows_sleep_job
  sleep_31:
    <<: *windows_sleep_job
  sleep_32:
    <<: *windows_sleep_job
  sleep_33:
    <<: *windows_sleep_job
  sleep_34:
    <<: *windows_sleep_job
  sleep_35:
    <<: *windows_sleep_job

  cpu-stress-test:
    docker:
      - image: cimg/base:current
    resource_class: small    
    steps:
      - checkout
      - run:
          name: "Install stress package (if needed)"
          command: |
            sudo apt-get update
            sudo apt-get install -y stress
      - run:
          name: "Run CPU stress test"
          command: |
            chmod +x cpu_stress.sh
            ./cpu_stress.sh


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:

  say-hello-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    when:
      equal: [<<pipeline.project.git_url>>, https://github.com/anonymoustest03/gatest1-03]
      # and:
      #      - equal: [<<pipeline.project.git_url>>, https://github.com/anonymoustest03/gatest1-03]
      #      - <<pipeline.parameters.nightly>>
    jobs:
      # - sleep
      # - sleep_2
      - sleep_3
      # - sleep_4
      # - sleep_5
      # - sleep_6
      # - sleep_7
      # - sleep_8
      # - sleep_9
      # - sleep_10
      # - sleep_11
      # - sleep_12
      # - sleep_13
      # - sleep_14
      # - sleep_15
      # - sleep_16
      # - sleep_17
      # - sleep_18
      # - sleep_19
      # - sleep_20
      # - sleep_21
      # - sleep_22
      # - sleep_23
      # - sleep_24
      # - sleep_25
      # - sleep_26
      # - sleep_27
      # - sleep_28
      # - sleep_29
      # - sleep_30
      # - sleep_31
      # - sleep_32
      # - sleep_33
      # - sleep_34
      # - sleep_35
      # - cpu-stress-test
      # - self-host-test
      

  say-hello-workflow_from_fork: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    when:
            not:
                 equal: [<<pipeline.project.git_url>>, https://github.com/anonymoustest03/gatest1-03]
    jobs:
      - sleep_3
      
      # - cpu-stress-test

# workflows:
#   say-hello-workflow:
#     jobs:
#       - sleep:
#           filters:
#             branches:
#               ignore: /.*/
#             pull_requests:
#               only:
#                 - /.*/
#       - cpu-stress-test:
#           filters:
#             branches:
#               ignore: /.*/
#             pull_requests:
#               only:
#                 - /.*/



